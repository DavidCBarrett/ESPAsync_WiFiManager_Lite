;PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
src_dir = $PROJECT_DIR\examples\PlatformIO_ESPAsync_WiFi
include_dir = $PROJECT_DIR\src

default_envs = ESP32-Debug, ESP32-Release

; ============================================================
[ESP32]
platform = espressif32
framework = arduino
board = esp32doit-devkit-v1

; ============================================================
; Serial configuration
; choose upload speed, serial-monitor speed
; ============================================================
upload_speed = 921600
;upload_port = COM11
monitor_speed = 115200
;monitor_port = COM11

; ============================================================
; Checks for the compatibility with frameworks and dev/platforms
lib_compat_mode = strict
;lib_ldf_mode = chain+
;lib_ldf_mode = deep+

; ============================================================
lib_deps =
; PlatformIO 5.x 
; me-no-dev/ESP Async WebServer@>=1.2.3
 https://github.com/khoih-prog/ESPAsyncWebServer
; me-no-dev/ESPAsyncTCP@>=1.2.2
 https://github.com/khoih-prog/ESPAsyncTCP
 me-no-dev/AsyncTCP@>=1.1.1
 khoih-prog/ESP_DoubleResetDetector@>=1.3.2
 khoih-prog/ESP_MultiResetDetector@>=1.3.2
; devyte/ESPAsyncDNSServer@>=1.0.0
 https://github.com/khoih-prog/ESPAsyncDNSServer

; ============================================================
build_flags =
    ; set your debug output (default=Serial)
    -D DEBUG_ESP_PORT=Serial
    ; comment the following line to enable WiFi debugging
    -D NDEBUG
    ; comment the following line to use EEPROM
    -D USE_LITTLEFS=true
    ; fix for compile error "...ESPAsyncDNSServer.cpp:197:5: error: 'DEBUG_OUTPUT' was not declared..."
    -D DEBUG_OUTPUT=Serial

[env:ESP32-Release]
extends 							= ESP32
build_type 							= release
build_flags = 
	${ESP32.build_flags}
	-D RELEASE

[env:ESP32-Debug]
extends 							= ESP32
; JTAG Debug Setup for ESP-PROG
upload_protocol 					= esp-prog
debug_tool 							= esp-prog
debug_init_break 					= tbreak setup
build_type 							= debug
build_flags = 
	${ESP32.build_flags}
	-D DEBUG

